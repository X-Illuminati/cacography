
# This is the main Samba configuration file. You should read the
# smb.conf(5) manual page in order to understand the options listed
# here. Samba has a huge number of configurable options (perhaps too
# many!) most of which are not shown in this example
#
# Any line which starts with a ; (semi-colon) or a # (hash) 
# is a comment and is ignored. In this example we will use a #
# for commentry and a ; for parts of the config file that you
# may wish to enable
#
# NOTE: Whenever you modify this file you should run the command "testparm"
# to check that you have not made any basic syntactic errors. 
#
#======================= Global Settings =====================================
[global]
    
    # 1. Server Naming Options:
    # workgroup = NT-Domain-Name or Workgroup-Name
    workgroup = WORKGROUP
    
    # netbios name is the name you will see in "Network Neighbourhood",
    # but defaults to your hostname
    #  netbios name = <name_of_this_server>
    
    # server string is the equivalent of the NT Description field
    server string = %h
    
    # Message command is run by samba when a "popup" message is sent to it.
    # The example below is for use with LinPopUp:
    ; message command = /usr/bin/linpopup "%f" "%m" %s; rm %s
    
    # 2. Printing Options:
    # Required to load all CUPS printers
    #printcap name = cups
    load printers = no
    
    # printcap cache time, so samba will automatically load new cups printers
    #printcap cache time = 60
    
    # It should not be necessary to spell out the print system type unless
    # yours is non-standard. Currently supported print systems include:
    # bsd, sysv, plp, lprng, aix, hpux, qnx, cups
    printing = bsd
    
    # Samba 2.2 supports the Windows NT-style point-and-print feature. To
    # use this, you need to be able to upload print drivers to the samba
    # server. The printer admins (or root) may install drivers onto samba.
    # Note that this feature uses the print$ share, so you will need to 
    # enable it below.
    # Printer admins are now defined by granting the SePrintOperatorPrivilege, ie:
    # run: net rpc rights grant 'DOMAIN\Printer Operators' SePrintOperatorPrivilege
    
    # 3. Logging Options:
    # this tells Samba to use a separate log file for each machine
    # that connects
    log file = /var/log/samba/%m.log
    
    # Put a capping on the size of the log files (in Kb).
    max log size = 500
    
    # Set the log (verbosity) level (0 <= log level <= 10)
    # log level = 3
    
    # 4. Security and Domain Membership Options:
    # This option is important for security. It allows you to restrict
    # connections to machines which are on your local network. The
    # following example restricts access to two C class networks and
    # the "loopback" interface. For more examples of the syntax see
    # the smb.conf man page. Do not enable this if (tcp/ip) name resolution does
    # not work for all the hosts in your network.
    #   hosts allow = 192.168.1. 192.168.2. 127.
    
    # Uncomment this if you want a guest account, you must add this to /etc/passwd
    # otherwise the user "nobody" is used
    guest account = guest
    # Allow users to map to guest:
    map to guest = bad user
    
    # Security mode. Most people will want user level security. See
    # security_level.txt for details.
    security = user
    # Use password server option only with security = server or security = domain
    # When using security = domain, you should use password server = *
    #   password server = <NT-Server-Name>
    #   password server = *
    
    # Password Level allows matching of _n_ characters of the password for
    # all combinations of upper and lower case.
    #  password level = 8
    #  username level = 8
    
    # You may wish to use password encryption. Please read
    # ENCRYPTION.txt, Win95.txt and WinNT.txt in the Samba documentation.
    # Do not enable this option unless you have read those documents
    # Encrypted passwords are required for any use of samba in a Windows NT domain
    # The smbpasswd file is only required by a server doing authentication, thus
    # members of a domain do not need one.
    encrypt passwords = yes
    smb passwd file = /etc/samba/smbpasswd
    
    # The following are needed to allow password changing from Windows to
    # also update the Linux system password.
    # NOTE: Use these with 'encrypt passwords' and 'smb passwd file' above.
    # NOTE2: You do NOT need these to allow workstations to change only
    #        the encrypted SMB passwords. They allow the Unix password
    #        to be kept in sync with the SMB password.
    ;  unix password sync = Yes
    # You either need to setup a passwd program and passwd chat, or
    # enable pam password change
    ;  pam password change = yes
    #  passwd program = /usr/bin/passwd '%u'
    ;  passwd chat = *New*UNIX*password* %n\n *Re*ype*new*UNIX*password* %n\n \
    ;*passwd:*all*authentication*tokens*updated*successfully*
    
    # Unix users can map to different SMB User names
    ;  username map = /etc/samba/smbusers
    
    # Using the following line enables you to customise your configuration
    # on a per machine basis. The %m gets replaced with the netbios name
    # of the machine that is connecting
    #   include = /etc/samba/smb.conf.%m
    
    # Options for using winbind. Winbind allows you to do all account and
    # authentication from a Windows or samba domain controller, creating
    # accounts on the fly, and maintaining a mapping of Windows RIDs to unix uid's 
    # and gid's. winbind uid and winbind gid are the only required parameters.
    #
    # winbind uid is the range of uid's winbind can use when mapping RIDs to uid's
    #  idmap uid = 10000-20000
    #
    # winbind gid is the range of uid's winbind can use when mapping RIDs to gid's
    #  idmap gid = 10000-20000
    #
    # winbind separator is the character a user must use between their domain
    # name and username, defaults to "\"
    #  winbind separator = +
    #
    # winbind use default domain allows you to have winbind return usernames
    # in the form user instead of DOMAIN+user for the domain listed in the
    # workgroup parameter.
    #  winbind use default domain = yes
    #
    # template homedir determines the home directory for winbind users, with 
    # %D expanding to their domain name and %U expanding to their username:
    #  template homedir = /home/%D/%U
    
    # When using winbind, you may want to have samba create home directories
    # on the fly for authenticated users. Ensure that /etc/pam.d/samba is
    # using 'service=system-auth-winbind' in pam_stack modules, and then
    # enable obedience of pam restrictions below:
    #  obey pam restrictions = yes
    
    #
    # template shell determines the shell users authenticated by winbind get
    #  template shell = /bin/bash
    
    # 5. Browser Control and Networking Options:
    # Configure Samba to use multiple interfaces
    # If you have multiple network interfaces then you must list them
    # here. See the man page for details.
    #   interfaces = 192.168.12.2/24 192.168.13.2/24 
    
    # Configure remote browse list synchronisation here
    #  request announcement to, or browse list sync from:
    #       a specific host or from / to a whole subnet (see below)
    #   remote browse sync = 192.168.3.25 192.168.5.255
    # Cause this host to announce itself to local subnets here
    #   remote announce = 192.168.1.255 192.168.2.44
    
    # set local master to no if you don't want Samba to become a master
    # browser on your network. Otherwise the normal election rules apply
    #   local master = no
    
    # OS Level determines the precedence of this server in master browser
    # elections. The default value should be reasonable
    #   os level = 33
    
    # Domain Master specifies Samba to be the Domain Master Browser. This
    # allows Samba to collate browse lists between subnets. Don't use this
    # if you already have a Windows NT domain controller doing this job
    #   domain master = yes 
    
    # Preferred Master causes Samba to force a local browser election on startup
    # and gives it a slightly higher chance of winning the election
    #   preferred master = yes
    
    # 6. Domain Control Options:
    # Enable this if you want Samba to be a domain logon server for 
    # Windows95 workstations or Primary Domain Controller for WinNT and Win2k
    #   domain logons = yes
    
    # if you enable domain logons then you may want a per-machine or
    # per user logon script
    # run a specific logon batch file per workstation (machine)
    #   logon script = %m.bat
    # run a specific logon batch file per username
    #   logon script = %u.bat
    
    # Where to store roaming profiles for WinNT and Win2k
    #        %L substitutes for this servers netbios name, %u is username
    #        You must uncomment the [Profiles] share below
    #   logon path = \\%L\Profiles\%u
    
    # Where to store roaming profiles for Win9x. Be careful with this as it also
    # impacts where Win2k finds it's /HOME share
    # logon home = \\%L\%u\.profile
    
    
    # The add user script is used by a domain member to add local user accounts
    # that have been authenticated by the domain controller, or when adding
    # users via the Windows NT Tools (ie User Manager for Domains).
    
    # Scripts for file (passwd, smbpasswd) backend:
    # add user script = /usr/sbin/useradd -s /bin/false '%u'
    # delete user script = /usr/sbin/userdel '%s'
    # add user to group script = /usr/bin/gpasswd -a '%u' '%g'
    # delete user from group script = /usr/bin/gpasswd -d '%u' '%g'
    # set primary group script = /usr/sbin/usermod -g '%g' '%u'
    # add group script = /usr/sbin/groupadd %g && getent group '%g'|awk -F: '{print $3}'
    # delete group script = /usr/sbin/groupdel '%g'
    
    # Scripts for LDAP backend (assumes nss_ldap is in use on the domain controller,
    # and needs configuration in smbldap_conf.pm
    # add user script = /usr/sbin/smbldap-useradd -m '%u'
    # delete user script = /usr/sbin/smbldap-userdel '%u'
    # add user to group script = /usr/sbin/smbldap-groupmod -m '%u' '%g'
    # delete user from group script = /usr/sbin/smbldap-groupmod -x '%u' '%g'
    # set primary group script = /usr/sbin/smbldap-usermod -g '%g' '%u'
    # add group script = /usr/sbin/smbldap-groupadd '%g' && /usr/sbin/smbldap-groupshow %g|awk '/^gidNumber:/ {print $2}'
    # delete group script = /usr/sbin/smbldap-groupdel '%g'
    
    
    # The add machine script is use by a samba server configured as a domain
    # controller to add local machine accounts when adding machines to the domain.
    # The script must work from the command line when replacing the macros,
    # or the operation will fail. Check that groups exist if forcing a group.
    # Script for domain controller for adding machines:
    # add machine script = /usr/sbin/useradd -d /dev/null -g machines -c 'Machine Account' -s /bin/false -M '%u'
    # Script for domain controller with LDAP backend for adding machines (please
    # configure in /etc/samba/smbldap_conf.pm first):
    # add machine script = /usr/sbin/smbldap-useradd -w -d /dev/null -c 'Machine Account' -s /bin/false '%u'
    
    # Domain groups:
    # Domain groups are now configured by using the 'net groupmap' tool
    
    # Enable priveleges, ie allowing members of Domain Admins to join machines
    # to the domain
    # enable privileges = yes
    
    # Samba Password Database configuration:
    # Samba now has runtime-configurable password database backends. Multiple
    # passdb backends may be used, but users will only be added to the first one
    # Default:
    # passdb backend = tdbsam
    # TDB backen with fallback to smbpasswd and guest
    # passdb backend = tdbsam smbpasswd guest
    # LDAP with fallback to smbpasswd guest
    # Enable SSL by using an ldaps url, or enable tls with 'ldap ssl' below.
    # passdb backend = ldapsam:ldaps://ldap.mydomain.com smbpasswd guest
    # Use the samba2 LDAP schema:
    # passdb backend = ldapsam_compat:ldaps://ldap.mydomain.com smbpasswd guest
    
    # Idmap settings (set idmap uid and idmap gid above):
    # Idmap backend to use:
    # idmap backend = ldap:ldap://ldap.mydomain.com
    
    # LDAP configuration for Domain Controlling:
    # The account (dn) that samba uses to access the LDAP server
    # This account needs to have write access to the LDAP tree
    # You will need to give samba the password for this dn, by 
    # running 'smbpasswd -w mypassword'
    # ldap admin dn = cn=root,dc=mydomain,dc=com
    # ldap ssl = start_tls
    # start_tls should run on 389, but samba defaults incorrectly to 636
    # ldap port = 389
    # ldap suffix = dc=mydomain,dc=com
    # Seperate suffixes are available for machines, users, groups, and idmap, if 
    # ldap suffix appears first, it is appended to the specific suffix.
    # Example for a unix-ish directory layout:
    # ldap machine suffix = ou=Hosts
    # ldap user suffix = ou=People
    # ldap group suffix = ou=Group
    # ldap idmap suffix = ou=Idmap
    # Example for AD-ish layout:
    # ldap machine suffix = cn=Computers
    # ldap user suffix = cn=Users
    # ldap group suffix = cn=Groups
    # ldap idmap suffix = cn=Idmap
    
    
    # 7. Name Resolution Options:
    # All NetBIOS names must be resolved to IP Addresses
    # 'Name Resolve Order' allows the named resolution mechanism to be specified
    # the default order is "host lmhosts wins bcast". "host" means use the unix
    # system gethostbyname() function call that will use either /etc/hosts OR
    # DNS or NIS depending on the settings of /etc/host.config, /etc/nsswitch.conf
    # and the /etc/resolv.conf file. "host" therefore is system configuration
    # dependant. This parameter is most often of use to prevent DNS lookups
    # in order to resolve NetBIOS names to IP Addresses. Use with care!
    # The example below excludes use of name resolution for machines that are NOT
    # on the local network segment
    # - OR - are not deliberately to be known via lmhosts or via WINS.
    # name resolve order = wins lmhosts bcast
    
    # Windows Internet Name Serving Support Section:
    # WINS Support - Tells the NMBD component of Samba to enable it's WINS Server
    #   wins support = yes
    
    # WINS Server - Tells the NMBD components of Samba to be a WINS Client
    #       Note: Samba can be either a WINS Server, or a WINS Client, but NOT both
    #   wins server = w.x.y.z
    
    # WINS Proxy - Tells Samba to answer name resolution queries on
    # behalf of a non WINS capable client, for this to work there must be
    # at least one  WINS Server on the network. The default is NO.
    #   wins proxy = yes
    
    # DNS Proxy - tells Samba whether or not to try to resolve NetBIOS names
    # via DNS nslookups. The built-in default for versions 1.9.17 is yes,
    # this has been changed in version 1.9.18 to no.
    dns proxy = no
    netbios name = BOXY
    log level = 1

[backup]
    path = /srv/backup
    comment = /srv/backup
    browseable = yes
    public = yes
    writable = yes
    create mask = 664
    directory mask = 775
    preserve case = yes
    force group = users

[current]
    path = /srv/current
    comment = /srv/current
    browseable = yes
    public = yes
    writable = yes
    create mask = 664
    directory mask = 775
    preserve case = yes
    force group = users
