#!/bin/sh

alias ll='ls -al'
alias rgrep='grep -R --color'
alias gr='grep -RIn --color'
alias less='less -S'
alias open='xdg-open'
alias dd='dd status=progress'
alias noise='speaker-test -t wav -c 1 -w brown_noise.wav -W /home/cbaker -D plughw:1,0 -b 1000000 -p 1000000'
alias panoise='(while true; do dd if=/home/cbaker/brown_noise.wav bs=44 skip=1 ; done) | paplay --raw --channels=1 --format=s16le --rate=48000'
alias boxy='sudo mount -t cifs //boxy/current /home/cbaker/Shares/boxy -ouid=cbaker,user=cbaker,vers=3'
alias ls='ls --color=auto -N'

ydesc () 
{ 
    yt-dlp -j "$@" | jq -r '"Title: "+.title,"Channel: "+.channel,"URL: "+.webpage_url,"Duration: "+(.duration/60 | tostring),"Release Date: "+(.release_timestamp|strflocaltime("%Y-%m-%d %H:%M:%S")?)//"Upload Date: "+(.upload_date|.[0:4]+"-"+.[4:6]+"-"+.[6:8]),"Description:\n"+.description'
}

youtube_getvid()
{
 #match http[s]://[www.]youtube.com/watch?v=<video>
 /usr/bin/grep -q -E '^https?://(www\.)?youtube\.com/watch\?.*v=[[:alnum:]_-]{11}' <<< "$1" && {
   echo $1 | /usr/bin/sed -nre 's/^.*((\?v=)|(&v=))([[:alnum:]_-]{11}).*$/\4/p'
 } || {
  #match http[s]://youtu.be/<video>
  /usr/bin/grep -q -E '^https?://(www\.)?youtu\.be/[[:alnum:]_-]{11}' <<< "$1" && {
   echo $1 | /usr/bin/sed -nre 's/^.*\/([[:alnum:]_-]{11}).*$/\1/p'
  }
 } || {
  #match <video>
  /usr/bin/grep -q -E '^[[:alnum:]_-]{11}$' <<< "$1" && {
   echo "$1"
  }
 }
}

ydl()
{
	local vid
	local vidpath
	local url
	url="$1"
	vid="$(youtube_getvid "$url")"
	[ "$url" == "$vid" ] && {
		url="https://youtube.com/watch?v=$vid"
	}

	[ -n "$vid" ] || return 1
	[ -e "$HOME/Videos/$vid.mp4" ] && echo "$vid OK" && return 0
	[ -e "$HOME/Videos2/$vid.mp4" ] && echo "$vid OK" && return 0

	[ -d "$HOME/Videos2" ] &&
		findmnt --target="$HOME/Videos2/" -O rw > /dev/null && {
			vidpath="$HOME/Videos2"
		}
	[ -d "$HOME/Videos" ] &&
		findmnt --target="$HOME/Videos/" -O rw > /dev/null && {
			vidpath="$HOME/Videos"
		}

	yt-dlp "$url" -o "${vidpath}/${vid}.mp4"
}

ypb()
{
	local vid
	vid="$(youtube_getvid "$1")"
	[ -n "$vid" ] || return 1
	[ -e "$HOME/Videos/$vid.mp4" -o -e "$HOME/Videos2/$vid.mp4" ] || return 1 
	[ -e "$HOME/Videos/$vid.mp4" ] && \
		xdg-open "$HOME/Videos/$vid.mp4"
	[ -e "$HOME/Videos2/$vid.mp4" ] && \
		xdg-open "$HOME/Videos2/$vid.mp4"
	return 0
}

ycu()
{
	local vid
	vid="$(youtube_getvid "$1")"
	[ -n "$vid" ] || return 1
	[ -e "$HOME/Videos/$vid.mp4" ] && \
		rm -f "$HOME/Videos/$vid.mp4" && echo "rm Videos/$vid"
	[ -e "$HOME/Videos2/$vid.mp4" ] && \
		rm -f "$HOME/Videos2/$vid.mp4" && echo "rm Videos2/$vid"
	return 0
}

musicstream()
{
	yt-dlp -f bestaudio -x --audio-format mp3 --audio-quality 9 "$@"
}

tone()
{
	speaker-test -r48000 -FS32_LE -c2 -p 10000 -t sine -l3
}

shorttone()
{
gst-launch-1.0 audiotestsrc wave=silence num-buffers=32 ! alsasink >/dev/null
gst-launch-1.0 audiotestsrc freq=660 num-buffers=16 ! alsasink >/dev/null
}

tripletone()
{
gst-launch-1.0 audiotestsrc wave=silence num-buffers=32 ! alsasink >/dev/null
gst-launch-1.0 audiotestsrc freq=660 num-buffers=16 ! alsasink >/dev/null
gst-launch-1.0 audiotestsrc freq=660 num-buffers=16 ! alsasink >/dev/null
gst-launch-1.0 audiotestsrc freq=660 num-buffers=16 ! alsasink >/dev/null
}

dirhash()
{
find . -type f ! -name SHA256SUM -print0 | xargs -0 sha256sum > SHA256SUM
}
